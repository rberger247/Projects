

node('master') {
    stage('import') {
        git 'https://github.com/rberger247/Projects'
    }
    stage('build') {
        try {
            dir('RestaurantsWeb') {
                bat 'nuget restore -PackagesDirectory'
'
                bat 'msbuild /p:MvcBuildviews=true'
            }
        }
        catch (exc) {
            slackSend 'build failed!'
        }
    }
    stage('test') {
        try {
            dir('RestaurantsWeb') {
                bat "VSTest.Console RestaurantsWeb.Tests\\bin\\Debug\\RestaurantsWeb.Tests.dll"
            }
        }
        catch (exc) {
          slackError('test')
            throw exc
        }
    }
    stage('analyze') {
        try {
            dir('RestaurantsWeb') {
            }
        }
        catch (exc) {
          slackError('analyze')
        }
    }
    stage('package') {
        try {
            dir('RestaurantsWeb') {
                dir('RestaurantsWeb') {
                    bat 'msbuild /t:package'
                }
            }
        }
        catch (exc) {
            slackSend 'package failed!'
        }
    }
    

    stage('deploy') {
        try {
            dir('RestaurantsWeb') {
                dir('RestaurantsWeb/obj/Debug/Package') {
                    bat "\"C:\\Program Files\\IIS\\Microsoft Web Deploy V3\\msdeploy.exe\" -source:package='C:\\Program Files (x86)\\Jenkins\\workspace\\Project-1\\RestaurantsWeb\\obj\\Debug\\Package\\BasicWebApp.zip' -dest:auto,computerName=\"https://ec2-54-88-118-117.compute-1.amazonaws.com:8172/msdeploy.axd\",userName=\"Administrator\",password=\"${password}\",authtype=\"basic\",includeAcls=\"False\" -verb:sync -disableLink:AppPoolExtension -disableLink:ContentExtension -disableLink:CertificateExtension -setParamFile:\"C:\\Program Files (x86)\\Jenkins\\workspace\\Project-1\\RestaurantsWeb\\obj\\Debug\\Package\\BasicWebApp.SetParameters.xml\" -AllowUntrusted=True"
                }
            }
        }
        catch (exc) {
            slackSend 'deploy failed!'
        }
    }
}
    def slackError(stageName) {
    slackSend color: 'danger', message: "${stageName} stage failed. [<${JOB_URL}|${env.JOB_NAME}> <${env.BUILD_URL}console|${env.BUILD_DISPLAY_NAME}>] [${currentBuild.durationString[0..-14]}]"
}
